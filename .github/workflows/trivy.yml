name: Scheduled Trivy Scan
on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * 1"

jobs:
  trivy:
    name: Trivy scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["sofie-core", "playout-gateway", "mos-gateway"]
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Pull Docker Images for Scanning
        run: |
          BRANCH_NAME=$(echo ${{ github.ref }} | sed 's@refs/heads/@@')
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ matrix.image }}:${{ github.ref_name }}
          docker pull $IMAGE_URI
      - name: Run Trivy vulnerability scanner (json)
        uses: aquasecurity/trivy-action@0.24.0
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
        with:
          image-ref: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ matrix.image }}:${{ github.ref_name }}
          format: json
          output: "${{ matrix.image }}-trivy-scan-results.json"

      - name: Run Trivy vulnerability scanner (table)
        uses: aquasecurity/trivy-action@0.24.0
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
        with:
          image-ref: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ matrix.image }}:${{ github.ref_name }}
          output: "${{ matrix.image }}-trivy-scan-results.txt"

      - name: Post all scan results to Github Summary as a table
        env:
          CODE_BLOCK: "```"
        run: |
          echo "# Trivy scan results ~ ${{ matrix.image}}:latest" >> $GITHUB_STEP_SUMMARY

          echo $CODE_BLOCK >> $GITHUB_STEP_SUMMARY
          cat ${{ matrix.image }}-trivy-scan-results.txt >> $GITHUB_STEP_SUMMARY
          echo $CODE_BLOCK >> $GITHUB_STEP_SUMMARY

      - name: Create summary of Trivy issues
        run: |
          summary=$(jq -r '.Results[] | select(.Vulnerabilities) | .Vulnerabilities | group_by(.Severity) | map({Severity: .[0].Severity, Count: length}) | .[] | [.Severity, .Count] | join(": ")' ${{ matrix.image }}-trivy-scan-results.json | awk 'NR > 1 { printf(" | ") } {printf "%s",$0}')
          if [ -z "$summary" ]; then
            summary="0 Issues"
          fi
          echo "SUMMARY=$summary" >> $GITHUB_ENV

      - name: Print summary
        run: echo "$SUMMARY"
